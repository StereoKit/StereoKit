name: Verify Compile
on: 
  workflow_dispatch:
  pull_request:
    branches:
    - master
    - develop

jobs:
  native-win32-uwp:
    runs-on: windows-latest
    env:
      CPM_SOURCE_CACHE: .deps_cache

    steps:
    - uses: actions/checkout@v4
    - uses: lukka/get-cmake@v3.26.3

    - name: Get Cache
      uses: actions/cache@v3
      with:
        key: DependencyCache
        path: |
          .deps_cache

    - name: Build Native Win32 x64
      run: |
        cmake --preset Win32_x64_Release
        cmake --build --preset Win32_x64_Release

    - name: Build Native UWP x64
      run: |
        cmake --preset Uwp_x64_Release
        cmake --build --preset Uwp_x64_Release

  native-linux-android-dotnet:
    runs-on: ubuntu-22.04
    env:
      CPM_SOURCE_CACHE: .deps_cache

    steps:
    - uses: actions/checkout@v4
    - uses: lukka/get-cmake@v3.26.3

    - name: Get Cache
      uses: actions/cache@v4
      with:
        key: DependencyCache
        path: |
          .deps_cache
    
    - name: Install Prerequisites
      run: |
        sudo apt-get update
        sudo apt-get install clang-12 lld-12 ninja-build libx11-dev libxfixes-dev libegl-dev libgbm-dev libfontconfig-dev

    - name: Build Native Linux x64
      run: |
        cmake --preset Linux_x64_Release
        cmake --build --preset Linux_x64_Release

    - name: Set up Android NDK
      uses: nttld/setup-ndk@v1.4.2
      id: setup-ndk
      with:
        ndk-version: r25c
        local-cache: true

    - name: Restore Android Symlinks
      run: |
        directory="${{ steps.setup-ndk.outputs.ndk-path }}/toolchains/llvm/prebuilt/linux-x86_64/bin"
        find "$directory" -type l | while read link; do
            current_target=$(readlink "$link")
            new_target="$directory/$(basename "$current_target")"
            ln -sf "$new_target" "$link"
            echo "Changed $(basename "$link") from $current_target to $new_target"
        done

    - name: Build Native Android ARM64
      run: |
        cmake --preset Android_Arm64_Release
        cmake --build --preset Android_Arm64_Release
      env:
        NDK: ${{ steps.setup-ndk.outputs.ndk-path }}

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with: 
        dotnet-version: 7.0.x

    - name: Build Sample Project
      run: dotnet build Examples/StereoKitTest/StereoKitTest.csproj -c Release
